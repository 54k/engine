#extension GL_EXT_shader_texture_lod : enable

uniform samplerCube texture_prefilteredCubeMap128;
uniform float material_reflectionFactor;

vec3 fixSeamsStretch(vec3 vec, float mipmapIndex, float cubemapSize) {
    float scale = 1.0 - exp2(mipmapIndex) / cubemapSize;
    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));
    if (abs(vec.x) != M) vec.x *= scale;
    if (abs(vec.y) != M) vec.y *= scale;
    if (abs(vec.z) != M) vec.z *= scale;
    return vec;
}

void addCubemapReflection(inout psInternalData data) {

    float bias = saturate(1.0 - data.glossiness) * 5.0; // multiply by max mip level
    vec3 fixedReflDir = fixSeamsStretch(data.reflDirW, bias, 128.0);

    vec3 refl = decodeRGBM( textureCubeLodEXT(texture_prefilteredCubeMap128, fixedReflDir, bias) );

    data.reflection += vec4(refl, material_reflectionFactor);
}

